version: '2.23.0'
services:
  mysqldb:
    container_name: mysql
    image: mysql:5.7
    env_file: .env
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    volumes:
      - ../data/MySQL:/var/lib/mysql

  redis:
    container_name: redis
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 50s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: heidiks/rabbitmq-delayed-message-exchange:latest
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - ../data/RabbitMQ:/var/lib/rabbitmq

  spring:
    container_name: spring
    image: maven:3-openjdk-17
    volumes: 
      - ./webapp:/webapp
    env_file: 
      - .env
    ports: 
      - "${SPRING_PORT}:8080"
    depends_on:
      mysqldb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

    environment:
      SPRING_APPLICATION_JSON: '{"spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/$MYSQL_DATABASE?useSSL=false","spring.datasource,username" : "$MYSQL_USER","spring.datasource.password" : "$MYSQL_PASSWORD","spring.jpa.hibernate.ddl-auto" : "update"}'
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORS: ${RABBITMQ_PASSWORD}
      
  react:
    container_name: react
    image: node:21-alpine
    volumes:
      - ./frontend:/app
    working_dir: /app
    depends_on: 
      - spring
    ports:
      - "${REACT_PORT}:3000"
    command: sh -c "npm install && npm start"

  api_consumer:
    container_name: api_consumer
    image: python:3.10-alpine
    volumes: 
      - ./api_consumer:/app
    depends_on:
      mysqldb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
        
    working_dir: /app
    env_file: .env
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORS: ${RABBITMQ_PASSWORD}
    command: sh -c "pip install -r requirements.txt && python app.py"

  database_adaptor:
    container_name: database_adaptor
    image: python:3.10-alpine
    volumes: 
      - ./database_adaptor:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    working_dir: /app
    env_file: .env
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORS: ${RABBITMQ_PASSWORD}
      EMAIL_USERNAME: ${EMAIL}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    command: sh -c "pip install -r requirements.txt && python app.py"


    

  

  

  